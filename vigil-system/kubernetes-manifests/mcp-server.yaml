---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vigil-config
  namespace: default
data:
  BANK_BASE_URL: "http://userservice.default.svc.cluster.local:8080"
  REQUEST_TIMEOUT: "30"
  AUTH_USERNAME: "testuser"
  HOST: "0.0.0.0"
  PORT: "8000"
  LOG_LEVEL: "info"

---
apiVersion: v1
kind: Secret
metadata:
  name: vigil-secrets
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  AUTH_PASSWORD: YmFua29mYW50aG9z  # "bankofanthos" in base64
  JWT_SECRET: c2VjcmV0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==  # "secret-key-change-in-production" in base64

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: default
  labels:
    app: mcp-server
    component: vigil-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
        component: vigil-system
    spec:
      containers:
      - name: mcp-server
        image: gcr.io/vigil-demo-hackathon/vigil-mcp-server:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: BANK_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: BANK_BASE_URL
        - name: REQUEST_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: REQUEST_TIMEOUT
        - name: AUTH_USERNAME
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: AUTH_USERNAME
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: vigil-config
              key: LOG_LEVEL
        - name: AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vigil-secrets
              key: AUTH_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: vigil-secrets
              key: JWT_SECRET
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: mcp-server
  namespace: default
  labels:
    app: mcp-server
    component: vigil-system
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: mcp-server

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-server-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mcp-server

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mcp-server-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mcp-server
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []  # Allow ingress from any pod in default namespace
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow outbound to Bank of Anthos services (same namespace now)
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 8080
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
